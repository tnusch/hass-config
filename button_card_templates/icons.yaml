#################################################
#                                               #
#                     ICONS                     #
#                                               #
#################################################

icon_plex:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M7.7.3h34.6c4.1 0 7.4 3.3 7.4 7.4v34.6c0 4.1-3.3 7.4-7.4 7.4H7.7c-4.1 0-7.4-3.3-7.4-7.4V7.7C.3 3.6 3.6.3 7.7.3z" fill="#282a2d"/>
        <path d="M25,7.1H14.6L25,25L14.6,42.9H25L35.4,25L25,7.1z" fill="#e5a00d"/>
      </svg>

icon_apple_tv:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M25.2 49.7l-13.7-.1c-2.4 0-4.6-.8-6.5-2.2-2-1.6-3.6-3.6-4.3-6.2-.2-1-.2-1.9-.3-3V11.5C.5 7.9 1.9 5 4.8 2.7 6.2 1.6 7.8.8 9.6.5c.5-.1.9-.1 1.4-.1L27.5.3l10.9.1c2.6 0 4.8.8 6.7 2.4 2.1 1.7 3.7 3.9 4.2 6.6l.2 2.4.1 20.5-.1 6.7c-.1 2.2-.9 4.2-2.2 5.9-1.7 2.2-4 3.8-6.8 4.4-.6.1-1.2.2-1.9.2-.1.1-13.4.2-13.4.2zm-4-27.8c-.9-1.2-2.2-1.6-3.7-1.2-.4.1-.8.2-1.2.4-.3.1-.6.1-.8 0-.4-.1-.8-.3-1.2-.4-.3-.1-.7-.1-1-.1-1.5.2-2.4 1.1-3 2.6-.4 1.1-.3 2.2 0 3.5.4 1.5 1 2.9 2.1 4 .5.6 1.2.9 2 .6 1.1-.5 2.2-.5 3.4 0 .8.3 1.5 0 2.1-.6.7-.8 1.1-1.8 1.6-2.8v-.2c-1-.6-1.7-1.4-1.8-2.7-.2-1.4.5-2.4 1.5-3.1zm9.9-1.4c.1.2.1.3.1.4l3.6 9.5c.1.3.3.4.6.4h.7c.6 0 .6 0 .9-.6l3.7-9.4c.1-.1.1-.3.2-.5H39l-2.9 8.3-3.1-8.3-1.9.2zM27.3 18l-1.3.4c-.5.2-.5.2-.6.7v1.4h-1.6l.1 1.4h1.5v5c0 .7.1 1.4.2 2.1.1.5.3 1 .8 1.4.8.6 2.6.7 3.5.2l-.1-1.2h-1.3c-.5 0-.9-.3-1-.8-.1-.3-.2-.6-.2-1v-5.8H30c0-.5.1-1 0-1.4h-2.7V18zm-8.8-.9c-1.9.3-3 2-2.7 3.2 1.4.2 2.9-1.7 2.7-3.2z"/>
      </svg>

icon_spotify:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M25 .3C11.4.3.3 11.4.3 25S11.4 49.7 25 49.7 49.7 38.6 49.7 25 38.6.3 25 .3zm11.3 35.6c-.4.7-1.4 1-2.1.5-5.8-3.5-13.1-4.3-21.7-2.4-.8.2-1.7-.3-1.8-1.2-.2-.8.3-1.7 1.2-1.8 9.4-2.2 17.5-1.2 24 2.8.6.5.9 1.4.4 2.1zm3.1-6.7c-.6.9-1.7 1.2-2.6.6-6.6-4.1-16.8-5.3-24.6-2.9a1.96 1.96 0 0 1-2.4-1.3 1.96 1.96 0 0 1 1.3-2.4c9-2.7 20.1-1.4 27.7 3.3.8.6 1.1 1.8.6 2.7h0zm.2-7c-8-4.7-21.1-5.2-28.7-2.9-1.2.4-2.5-.3-2.9-1.5s.3-2.5 1.5-2.9c8.7-2.6 23.2-2.1 32.4 3.3 1.1.7 1.5 2.1.8 3.2-.6 1.1-2 1.4-3.1.8h0z"/>
      </svg>

icon_nest_mini:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M49.7 25c0 13.6-11.1 24.7-24.8 24.7C11.3 49.7.3 38.6.3 25S11.4.3 25 .3 49.7 11.4 49.7 25zm-33.9 0a2.22 2.22 0 0 0-2.2-2.2c-1.2 0-2.3 1-2.3 2.2a2.22 2.22 0 0 0 2.2 2.2c1.3.1 2.3-.9 2.3-2.2h0zm10.8 0c0 1.2.9 2.2 2.2 2.3 1.3 0 2.3-1 2.3-2.2 0-1.3-1-2.3-2.2-2.3-1.3 0-2.3.9-2.3 2.2zm-3.2 0a2.22 2.22 0 0 0-2.2-2.2c-1.2 0-2.3 1-2.3 2.2a2.22 2.22 0 0 0 2.2 2.2c1.3 0 2.3-.9 2.3-2.2h0zm13 2.2a2.22 2.22 0 0 0 2.2-2.2c0-1.2-1-2.3-2.2-2.3a2.22 2.22 0 0 0-2.2 2.2c0 1.3 1 2.3 2.2 2.3z" />
      </svg>

icon_play_pause:
  styles:
    custom_fields:
      play_pause:
        - top: -10%
        - right: 0
        - bottom: 0
        - left: 0
        - margin: auto
        - width: 25%
        - height: 25%
        - position: absolute
        - fill: "#dedede"
  custom_fields:
    play_pause: >
      [[[
        let style = `
          <style>
            .scale-up {
              animation: scale-up 1s forwards;
              cubic-bezier(.05, .5, .3, 1);
              transform-origin: center center;
            }
            @keyframes scale-up {
              0% {
                opacity: 0;
                transform: scale(0);
              }
              20% {
                transform: scale(1);
              }
              30% {
                opacity: 1;
              }
              80% {
                opacity: 1;
              }
              100% {
                opacity: 0;
              }
            }
          </style>
        `;
        if (variables.state === 'paused' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 166 166">${style}
                <path class="scale-up" d="M0 0h59.9v166H0zm106.1 0H166v166h-59.9z"/>
              </svg>
            `;
        }
        if (variables.state === 'playing' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 166 166">${style}
                <path class="scale-up" d="M0 0l166 83L0 166z"/>
              </svg>
            `;
        }
      ]]]

icon_hue:
  styles:
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -14%
        - margin-top: 1%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                100% {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="#9da0a2" d="M27.4 47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0 .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8 0-8.4.4-10.9 5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0 .1 0 .7 1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18 3.2-18.8.1-.4.1-.5.1-.7"/>
            <path class="${state} light-color" d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2 10.9.4.4-.4.7-.8.9-1.1C39 8.5 38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1 5 0 .5-.1 2.5 2.1 8.2 0 .3.3.8.7 1.1z"/>
          </svg>
        `;
      ]]]

icon_shade:
  styles:
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -15%
        - margin-top: 1%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                100% {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="#9da0a2" d="M26.4 25.6c.6-.3 1.1-.7 1.1-1.3L25 17.9l-2.5 6.4c0 .7.6 1.1 1.1 1.3v20.8h-5.5v2.7h13.7v-2.7h-5.5V25.6z"/>
            <path class="${state} light-color" d="M24.6.9l-9.4.5c-.6.1-1.9 0-2.5 2.1s-2.4 9.1-4 16.9c-.2.7-.5 2-.5 2.3s-.4 1.6.9 1.6c.8.1 7.4.3 15.9.3 8.6 0 15.1-.3 15.9-.3 1.3-.1.9-1.3.9-1.6s-.3-1.6-.5-2.3c-1.6-7.8-3.4-14.8-4-16.9s-1.9-2-2.5-2.1c-1.6-.2-6.9-.4-9.4-.5"/>
          </svg>
        `;
      ]]]

icon_tv:
  styles:
    custom_fields:
      icon:
        - width: 87%
        - margin-top: -8%
        - fill: >
            [[[
              return variables.state_on
                  ? '#616161'
                  : '#9da0a2';
            ]]]
  custom_fields:
    icon: >
      [[[
        let style = `
          <style>
            @keyframes on {
              from {
                transform: scaleY(0);
              }
              to {
                transform: scaleY(1);
              }
            }
            .on {
              animation: on 1s;
              transform-origin: -100% 46%;
              animation-fill-mode: forwards;
            }
            @keyframes off {
              from {
                transform: scaleY(1);
              }
              to {
                transform: scaleY(0);
              }
            }
            .off {
              animation: off 1s;
              transform-origin: -100% 46%;
              animation-fill-mode: forwards;
            }
          </style>
        `,
          path = `
            <path d="M46 9.2v27.5H4.1V9.2H46m2.4-2.4H1.6v32.3h46.7c.1 0 .1-32.3.1-32.3zM11.9 43.2h26.3c.6 0 1.1-.4 1.1-1v-.3c0-.6-.4-1.1-1-1.1H11.9c-.6 0-1.1.4-1.1 1v.3a1.11 1.11 0 0 0 1.1 1.1z"/>
          `,
          gradient = `
            <linearGradient id="A" gradientUnits="userSpaceOnUse" x1="5.401" y1="34.714" x2="43.817" y2="11.74">
              <stop offset="0" stop-color="#64acb7"/>
              <stop offset="1" stop-color="#7fdbe9"/>
            </linearGradient>
          `;
        if (variables.state_on && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${style} ${gradient} 
                <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/>
                <path class="on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
        }
        if (variables.state_on && variables.timeout > 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${gradient} 
                <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/>
                <path class="on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
        }
        if (variables.state === 'off' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${style} ${gradient} 
                <path class="off" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
        } else {
            return `
              <svg viewBox="0 0 50 50"> ${style} 
                ${path}
              </svg>
            `;
        }
      ]]]

icon_ps5:
  styles:
    custom_fields:
      icon:
        - width: 89%
        - margin-left: -2%
        - margin-top: -9%
  custom_fields:
    icon: >
      [[[
        if (variables.state_on && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50">
                <style>
                @keyframes on {
                  50% {
                    transform: translateY(-45%);
                  }
                  100% {
                    transform: translateY(0);
                  }
                }
                .on {
                  animation: on 2s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
                }
              </style>
              <g style="clip-path: url(#mask);">
                <g class="on">
                  <path fill="#00aa9e" d="M49.2 38.9l-75.6-25.1v7.4l75.6 25.2z"/>
                  <path fill="#f3c202" d="M49.2 46.4l-75.6-25.2v7.5l75.6 25.1z"/>
                  <path fill="#326db3" d="M49.2 53.8l-75.6-25.1V51l75.6 25.1zm0-22.3L-26.4 6.4v7.4l75.6 25.1z"/>
                </g>
              </g>
              <defs>
                <clipPath id="mask">
                  <path d="M47.5 33.2c-.5-2.2-3.9-3.5-9.1-3.9-3.8-.3-7.5.6-11.1 1.9l-.6.2v-5.7l-5.7.8-4.6 1.6L6 31.9h-.1c-1.9.7-3.8 2.2-3.7 4.2.1 2.1 4.7 2.6 8.2 3.2 3.3.6 6.2.2 8.9-.7l7.3 4.8L33 41l10.7-4h.1c2.8-1 4-2.5 3.7-3.8zm-31.3 2l-3.6 1.3c-2.2.8-4.1-1.1-2.1-1.9l1.7-.6 7.2-2.7v2.8l-3.2 1.1zm22.5-1.1l-1.9.7-10.2 3.7V36l6.5-2.4 3.8-1.3c4-.9 5.6.5 1.8 1.8z"/>
                </clipPath>
              </defs>
              <path fill="#de0029" d="M26.7 14.6v28.7l-7.3-2.5V7.1l9.3 2.6c6 1.7 9.6 5 9.6 10.7-.1 6.7-3 9.4-8.7 7.6V14.9c-.1-1.6-2.9-1.7-2.9-.3h0z"/>
            </svg>
          `;
        }

        return variables.state_on && variables.timeout > 2000
            ? `
              <svg viewBox="0 0 50 50">
                <path d="M33.1 33.6L26.7 36v-4.5l6.4 2.1h0zM19.4 29l-2.9-1h-.1L6 31.9h-.1-.1l6.3 2.1h.1l7.2-2.7V29zm0 5.1l-3.2 1.1-.3.1 3.5 1.2v-2.4zm17.4.7h0l-10.1 3.7v.4L33 41l10.6-4-6.8-2.2z" fill="#00aa9e" />
                <path d="M19.4 38.5l-.1.1c-2.7.9-5.6 1.3-8.9.7-3.5-.6-8.1-1.1-8.2-3.2-.1-2 1.7-3.4 3.6-4.2l6.3 2.1-1.6.6c-2 .8-.1 2.7 2.1 1.9l3.3-1.2 3.5 1.2v2zm7.3 4.8L33 41l-6.3-2.1v4.4" fill="#f3c202" />
                <path d="M19.4 29l-2.9-1 2.9-1v2zm28.1 4.2c-.5-2.2-3.9-3.5-9.1-3.9-3.8-.3-7.5.6-11.1 1.9l-.6.2h0l6.5 2.1 3.7-1.3c4-.9 5.6.5 1.8 1.8l-1.9.7 6.8 2.2h.1.1c2.8-.9 4-2.4 3.7-3.7z" fill="#326db3" />
                <path d="M26.7 14.6v28.7l-7.3-2.5V7.1l9.3 2.6c6 1.7 9.6 5 9.6 10.7-.1 6.7-3 9.4-8.7 7.6V14.9c-.1-1.6-2.9-1.7-2.9-.3z" fill="#de0029" />
              </svg>`
            : `
              <svg viewBox="0 0 50 50">
                <path fill="#9da0a2" d="M43.8 37h-.1l-10.6 4-4.2 1.6v-4.9l8-2.9 1.9-.7c3.8-1.3 2.2-2.7-1.8-1.9l-3.8 1.3-4.3 1.6v-4.5c3.1-1 6.3-1.6 9.5-1.4 5.3.4 8.7 1.6 9.1 3.9.3 1.4-.9 2.9-3.7 3.9zm-26.7-2.1l-.9.3-3.6 1.3c-2.2.8-4.1-1.1-2.1-1.9l1.7-.6 5-1.9v-4.2l-.6.2L6 31.9h-.1c-1.9.7-3.8 2.2-3.7 4.2.1 2.1 4.7 2.6 8.2 3.2 2.4.4 4.6.3 6.7-.1v-4.3zm12.4-20V28c5.7 1.7 8.7-.9 8.7-7.6.1-5.7-3.6-9-9.6-10.7l-9.3-2.6v33.8l7.2 2.5.1.1V14.6c.1-1.4 2.9-1.3 2.9.3z"/>
              </svg>`;
      ]]]

icon_spot:
  styles:
    custom_fields:
      icon:
        - width: 74%
        - margin-left: -8%
        - margin-top: 3%
  custom_fields:
    icon: >
      [[[
        let state;
        if (variables.state_on && variables.timeout < 2000) {
            state = 'on';
        } 
        if (variables.state === 'off' && variables.timeout < 2000) {
            state = 'off';
        }
        if (variables.state_on && variables.timeout > 2000) {
            state = 'on_timeout';
        }
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);
                }
                70% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                75% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                88% {
                  transform: rotateZ(-11deg);
                }
                100% {
                  transform: rotateZ(-15deg);
                }
              }
              @keyframes off {
                0% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);
                }
                70% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                75% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                88% {
                  transform: rotateZ(-4deg);
                }
                100% {
                  transform: rotateZ(0deg);
                }
              }
              .on {
                animation: on 0.7s;
                transform-origin: 40% 20%;
                animation-fill-mode: forwards;
                animation-delay: -0.1s;
              }
              .off {
                animation: off 0.7s;
                transform-origin: 40% 20%;
                animation-fill-mode: forwards;
              }
              .on_timeout {
                transform: rotateZ(-15deg);
                transform-origin: 40% 20%;
              }
            </style>
            <path style="clip-path: url(#mask);" fill="#9da0a2" d="M40.5.8H17.1c-.1 0-.1 0-.1.1A3.12 3.12 0 0 0 20.1 4h6.1c.1 0 .1 0 .1.1v7.4L18 19.1l3.6 3.5 9.1-8.6c.4-.4.6-1 .7-1.6V4c0-.1 0-.1.1-.1h6c1.7.1 3.1-1.3 3-3.1z"/>
            <defs>
              <clipPath id="mask">
                <path class="${state}" d="M0 9.1h24l8.3 8.8H50V-9H0z"/>
              </clipPath>
            </defs>
            <path class="${state} light-color" d="M25.5 46.4s1.4.5 10.4-8.2c.5-.4 6.3-6.3 5.8-7.1-.7-.8-18.6-19.5-18.6-19.5s-.6-.9-8.6 6.4c-.6.5-8.7 8-7.7 9.1l18.7 19.3z"/>
          </svg>
        `;
      ]]]

icon_imac:
  styles:
    custom_fields:
      icon:
        - width: 80%
        - margin-left: 1%
        - margin-top: -5%
        - fill: >
            [[[ return variables.state_on ? '#72757c' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000
            ? 'on'
            : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                from {
                  opacity: 0.5;
                  transform: scale(0.6);
                }
                100% {
                  opacity: 1;
                }
              }
              .on {
                animation: on 0.8s cubic-bezier(0.25, 1, 0.5, 1);
                transform-origin: center;
              }
            </style>
            <path class="${state}" d="M31.9 44.5c-1-.3-1.9.4-1.9-3.7h-9.9c0 4.2-.9 3.4-1.9 3.7s-.2.7-.2.7h14.1s.8-.3-.2-.7zM47.6 4.8H2.5c-1.1 0-2 .9-2 2v30.1c0 1.1.9 2 2 2h45c1.1 0 2-.9 2-2v-30a1.95 1.95 0 0 0-1.9-2.1zm-.7 26.4H3.2V7.6H47v23.6z"/>
          </svg>
        `;
      ]]]

icon_monitors:
  styles:
    custom_fields:
      icon:
        - width: 73%
        - margin-left: -9%
  custom_fields:
    icon: >
      [[[
        let style = `
          <style>
            @keyframes cone {
              35% {
                transform: scale(0.8);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              36% {
                transform: translateY(0%);
              }
              49% {
                transform: scale(1.25);
              }
              63% {
                transform: scale(0.85);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              77% {
                transform: scale(1.15);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              95% {
                transform: scale(1);
              }
            }
            .cone {
              animation: cone 1.2s;
              transform-origin: center;
            }
            @keyframes speaker {
              0% {
                transform: scale(1);
              }
              40% {
                transform: scale(1);
              }
              49% {
                transform: scale(0.95);
              }
              63% {
                transform: scale(1);
              }
              77% {
                transform: scale(0.95);
              }
              100% {
                transform: scale(1);
              }
            }
            .speaker {
              animation: speaker 1.3s;
              transform-origin: center;
            }
          </style>
        `,
          paths = `
            <g class="speaker">
              <path fill="#686868" d="M35.8 46.9H14.2c-1.1 0-2-1-2-2.3V6.7c0-1.3.9-2.3 2-2.3h21.5c1.1 0 2 1 2 2.3v37.9c0 1.2-.9 2.3-1.9 2.3z"/>
              <path fill="#2a2a2a" d="M39.2 1H10.8C9.4 1 8.3 2.1 8.2 3.5v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3c1.4 0 2.5-1.2 2.6-2.6V3.5c0-1.4-1.1-2.5-2.5-2.5zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4C22.5 8 23.6 7 25 7zm10.2 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6s-.1-1.1-.4-1.9.6-.9.6-.9h19.3c0-.1.8-.1.5.9z"/>
            </g>
            <path class="cone" fill="#e5dd00" d="M25 15.7c-6.2 0-11.3 5.1-11.3 11.3S18.8 38.3 25 38.3 36.3 33.2 36.3 27c-.1-6.3-5.1-11.3-11.3-11.3zm0 14.5a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c-.1 1.9-1.5 3.3-3.3 3.3z"/>
          `;
        if (variables.state_on && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50">
                ${style}
                ${paths}
              </svg>
            `;
        }

        return variables.state_on && variables.timeout > 2000
            ? `
              <svg viewBox="0 0 50 50">
                ${paths}
              </svg>
            `
            : `
              <svg viewBox="0 0 50 50">
                <path fill="#9da0a2" d="M25 18.6c-4.6 0-8.4 3.8-8.4 8.4s3.8 8.4 8.4 8.4 8.4-3.8 8.4-8.4-3.7-8.4-8.4-8.4zm0 11.7a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c0 1.8-1.4 3.3-3.3 3.3zM39.2 1H10.9C9.4 1 8.3 2.1 8.3 3.6v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3a2.65 2.65 0 0 0 2.6-2.6v-43C41.7 2 40.5.9 39.2 1zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4S23.7 7 25 7zm10.3 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6l-.4-1.9c-.2-.9.6-.9.6-.9h19.3s.9.1.6.9zM25 38.2c-6.2 0-11.3-5.1-11.3-11.3a11.29 11.29 0 1 1 22.6 0c.1 6.3-5 11.3-11.3 11.3z"/>
              </svg>
            `;
      ]]]

icon_lamp:
  styles:
    custom_fields:
      icon:
        - width: 79%
        - margin-left: -16%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="#9da0a2" d="M26.5 21.8l3.8-6.1H19.7l3.8 6.1c-5 .7-6.3 5.8-5.7 10.2.7 5.1 3.2 10.1 5.7 14.4H19v2.5h11.8v-2.5h-4.5C29 42 31.4 37 32.1 32c.6-4.4-.6-9.4-5.6-10.2zm3.1 9.1c-.3 4.3-2.3 8.7-4.4 12.4l-.2.1v.1-.1c-1.8-3-3.3-6.4-4.1-9.7-.7-3.1-1-7.2 2.7-8.4 1.4-.5 3.1-.1 4.2.8 1.6 1 1.8 3 1.8 4.8z"/>
            <path class="${state} light-color" d="M38.1 20L35.7 3.8c-.3-1.9-.4-1.7-.6-2-.9-.6-2.3-.7-2.3-.7H17.4s-1.4 0-2.3.7c-.2.3-.3.1-.6 2C14 5.7 11.9 20 11.9 20s5.8.3 13.4.3h0c7.3 0 12.8-.3 12.8-.3z"/>
          </svg>
        `;
      ]]]

icon_climate:
  styles:
    custom_fields:
      icon:
        - width: 78%
        - margin-left: -10%
        - fill: >
            [[[ return variables.state === 'cool' || variables.state === 'fan_only' ? '#5daeea' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M36.8 1.2v1.7a5.34 5.34 0 0 1-5.3 5.3H18.4a5.34 5.34 0 0 1-5.3-5.3V1.2c-2.6.4-4.7 2.8-4.7 5.6v36.5c0 3.1 2.6 5.7 5.7 5.7h21.8c3.1 0 5.7-2.6 5.7-5.7V6.8c0-2.8-2.1-5.2-4.8-5.6zm-1.7 35.6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3c-.4.2-.8.4-1.4.6-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zM15.7 1.9v-.8h18.6V3c0 1.5-1.2 2.8-2.8 2.8H18.4c-1.5 0-2.8-1.2-2.8-2.8V1.9z"/>
      </svg>

icon_bathroom:
  styles:
    custom_fields:
      icon:
        - width: 78%
        - margin-left: -10%
  custom_fields:
    icon: >
      [[[
        let state;
        if (variables.state_on && variables.timeout < 2000) {
          state = 'on';
        } 
        if (variables.state === 'off' && variables.timeout < 2000) {
          state = 'off';
        }
        if (variables.state_on && variables.timeout > 2000) {
          state = 'on_timeout';
        }
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: rotateZ(0deg) translate(0%, 0%);
                }
                100% {
                  transform: rotateZ(-90deg) translate(-1.5%, 0%);
                }
              }
              @keyframes off {
                0% {
                  transform: rotateZ(-90deg) translate(-1.5%, 0%);
                }
                45% {
                  transform: rotateZ(-40deg);
                }
                55% {
                  transform: rotateZ(0deg);
                }
                65% {
                  transform: rotateZ(-15deg);
                }
                75% {
                  transform: rotateZ(0deg);
                }
                85% {
                  transform: rotateZ(-5deg);
                }
                95% {
                  transform: rotateZ(0deg);
                }
              }
              .on {
                animation: on 0.45s;
                animation-fill-mode: forwards;
                transform-origin: 45% 41%;
                transition-timing-function: cubic-bezier(0.85, 0, 0.15, 1);
              }
              .on_timeout {
                transform: rotateZ(-90deg) translate(-1.5%, 0%);
                transform-origin: 45% 41%;
              }
              .off {
                animation: off 1.1s linear;
                animation-delay: 0.05s;
                animation-fill-mode: both;
                transform-origin: 45% 41%;
              }
            </style>
            <g class="light-color">
              <path d="M12.9 1.2h2.5c1.6 0 2.9 1.3 2.9 2.9v18.6c0 1.4 1.1 2.5 2.4 2.5h20.5c.5 0 1 .4.9 1-.1 2.6-1.2 9.6-10.2 11v7.6c0 .2.2.4.4.4h1.5a1.58 1.58 0 0 1 1.6 1.6v.3a1.58 1.58 0 0 1-1.6 1.6H11a1.58 1.58 0 0 1-1.6-1.6v-.3a1.58 1.58 0 0 1 1.6-1.6h1.6c.2 0 .4-.2.4-.4v-7.6s-5.2-.3-5.2-5.9V4.2c0-1.6 1.3-2.9 2.9-2.9l2.2-.1c0 .1 0 0 0 0z"/>
              <path class="${state}" d="M22.3 18.8h18.3a1.58 1.58 0 0 1 1.6 1.6v.6a1.58 1.58 0 0 1-1.6 1.6h-19c-.4 0-.7-.3-.8-.7v-2.3c0-.4.3-.7.7-.8h.8z"/>
            </g>
          </svg>
        `;
      ]]]

icon_fan2:
  styles:
    custom_fields:
      icon:
        - width: 75%
        - margin-left: -3%
  custom_fields:
    icon: >
      [[[
        let path = `
          <circle cx="25" cy="25" r="6.6"/>
          <path d="M31.9 30.4c-.5.6-1.1 1.1-1.7 1.5-1.4 1.1-3.2 1.7-5.2 1.7-2.3 0-4.5-.9-6-2.4-.9 1.1-1.6 2.3-2.3 3.2l-4.9 5.4c-1.8 2.7.3 5.6 2.5 7 3.9 2.4 9.8 3.1 14.1 1.9 4.6-1.3 7.9-4.7 7.4-9.7-.2-3.4-1.9-6-3.9-8.6zM17 28.3c-.4-1-.6-2.1-.6-3.3a8.7 8.7 0 0 1 6.4-8.4l-1.6-3.5L19 6.2c-1.5-2.8-5-2.5-7.3-1.2-4 2.2-7.5 6.9-8.7 11.3-1.2 4.6.2 9.2 4.7 11.3 3.1 1.3 6.1 1.2 9.3.7zm26.9-17.6c-3.3-3.4-8-4.6-12.1-1.8-2.8 1.8-4.2 4.6-5.5 7.5 4.2.6 7.4 4.2 7.4 8.6 0 .9-.1 1.7-.4 2.5 1.3.2 2.8.3 3.8.4 2.3.4 4.7 1.3 7.1 1.7 3.2.3 4.7-3 4.8-5.6.3-4.6-1.9-10.1-5.1-13.3z"/>
        `,
        style = `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes rotate {
                0% {
                  visibility: visible;
                  transform: rotate(0deg) translateZ(0);
                }
                100% {
                  transform: rotate(1080deg) translateZ(0);
                }
              }
              .start {
                animation: rotate 2.8s ease-in;
                transform-origin: center;
                fill: #5daeea;
                visibility: hidden;
                will-change: transform;
              }
              .on {
                animation: rotate 1.8s linear infinite;
                transform-origin: center;
                fill: #5daeea;
                animation-delay: 2.8s;
                visibility: hidden;
                will-change: transform;
              }
              .end {
                animation: rotate 2.8s;
                transform-origin: center;
                fill: #9ca2a5;
                animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
                will-change: transform;
              }
              .start_timeout {
                animation: rotate 1.8s linear infinite;
                transform-origin: center;
                fill: #5daeea;
                visibility: hidden;
                will-change: transform;
              }
              .end_timeout {
                fill: #9ca2a5;
              }
            </style>
        `;
        if (variables.state_on && variables.timeout < 2000) {
          return `${style}<g class="start">${path}</g><g class="on">${path}</g></svg>`;
        }
        if (variables.state === 'off' && variables.timeout < 2000) {
          return `${style}<g class="end">${path}</g></svg>`;
        }
        if (variables.state_on && variables.timeout > 2000) {
          return `${style}<g class="start_timeout">${path}</g></svg>`;
        } else {
          return `${style}<g class="end_timeout">${path}</g></svg>`;
        }
      ]]]

icon_closet:
  styles:
    custom_fields:
      icon:
        - width: 80%
        - margin-left: -16%
  custom_fields:
    icon: >
      [[[
        let room = `d="M11.4,1.4h27.2v43.1H11.4V1.4z" fill="#bcbcbc"`,
          door = `d="M11.4 1.4v43.1h27.2V1.4H11.4zm23 23.4c0 1.1-.9 1.9-1.9 1.9h0c-1.1 0-1.9-.9-1.9-1.9V21c0-1.1.9-1.9 1.9-1.9h0c1.1 0 1.9.9 1.9 1.9v3.8z"`;

        if (variables.state_on && variables.timeout < 2000) {
          return `
            <style>
              .state {
                animation: state 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              .opacity {
                animation: opacity 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              @keyframes state {
                0% {
                  transform: none;
                  fill: #9da0a2;
                }
                100% {
                  transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                  fill: #b68349;
                }
              }
              @keyframes opacity {
                0% {
                  opacity: 0;
                }
                100% {
                  opacity: 1;
                }
              }
            </style>
            <svg viewBox="0 0 50 50">
              <path class="opacity" ${room}/>
              <path class="state" ${door}/>
            </svg>
          `;
        }

        if (variables.state_on && variables.timeout > 2000) {
          return `
            <svg viewBox="0 0 50 50">
              <style>
                .state_timeout_on {
                  transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                  fill: #b68349;
                }
              </style>
              <path ${room}/>
              <path class="state_timeout_on" ${door}/>
            </svg>
          `;
        }

        return variables.state === 'off' && variables.timeout < 2000 ? `
          <style>
            .state {
              animation: state 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
            }
            .opacity {
              animation: opacity 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
            }
            .reverse {
              animation-direction: reverse;
            }
            @keyframes state {
              0% {
                transform: none;
                fill: #9da0a2;
              }
              100% {
                transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                fill: #b68349;
              }
            }
            @keyframes opacity {
              0% {
                opacity: 0;
              }
              100% {
                opacity: 1;
              }
            }
          </style>
          <svg viewBox="0 0 50 50">
            <path class="opacity reverse" ${room}/>
            <path class="state reverse" ${door}/>
          </svg>
        ` : `
          <svg viewBox="0 0 50 50">
            <style>
              .state_timeout_off {
                fill: var(--state-icon-color);
              }
            </style>
            <path class="state_timeout_off" ${door}/>
          </svg>
        `;
      ]]]

icon_away:
  state_display: Auto
  styles:
    card:
      - transition: all 0.3s ease-out
    custom_fields:
      icon:
        - width: 79%
        - margin-left: -1%
        - margin-top: -1%
        - fill: >
            [[[ return variables.state_on ? '#516d82' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                10%,
                20%,
                100% {
                  transform: rotateZ(0deg);
                }
                30%,
                50%,
                70% {
                  transform: rotateZ(7deg);
                }
                90% {
                  transform: rotateZ(3deg);
                }
                40%,
                60%,
                80% {
                  transform: rotateZ(-7deg);
                }
              }
              .on {
                animation: on 1.35s cubic-bezier(0.5, 1, 0.89, 1);
                animation-fill-mode: both;
                transform-origin: 70% 80%;
                animation-delay: 0s;
              }
            </style>
            <path class="${state}" d="M32.1 18.4s.3-1.6.7-2.1c.3-.6.9-1.4 1.6-1.8.6-.4 1.1-.7 1.4-.7s.7-.1 1 .1.6.4.8 1.3l.3 2.7.1 2.4.2 4.1c0 .3.2 3.1.2 3.3s.2 2.7.2 3.2l-.1 2.5c.1 1.6.5 3.1-.2 4.6-.6 1.4-1.7 2.7-2.9 3.6-.5.4-1.9 1.3-2.9 1.7-1.1.5-2.2.8-3.3 1.1-.5.1-1.4.4-2.3.3s-1.8-.6-2.1-1l-1.6-2.3c-.6-.8-2.1-2.3-2.3-2.5l-2.7-2.8c-.2-.2-2.7-3.5-2.9-3.8l-3.1-4.7-1.8-3.2-1.5-2.8-.9-1.8c-.1-.2-.3-1.1-.2-1.4.3-1.2 1.4-1.4 2.3-.7.3.2.9 1 1.1 1.3s6.1 8.1 6.1 8.1c.2.3.7.3.9 0s-.1-.7-.2-.9c-.4-.6-8.3-11.5-8.3-11.5s-.6-.9-.7-1.1c-.3-1.1 0-2.3 1.1-2.7s1.9.3 2.6 1.1c.3.3 8.3 11.5 8.3 11.5.2.2.3.3.5.3.3 0 .5-.4.4-.7-.1-.2-.5-.9-.5-.9L11.8 9c-.6-1-.9-2-.1-3 .7-.8 2.2-1.3 3-.2.3.3 10.1 14.3 10.1 14.3.2.2.5.4.7.3.5-.1.3-.7.1-1-.1-.2-8.4-11.8-8.4-11.8-.4-.9-.6-2 .2-2.8 1-1.1 2.5-.5 3.3.5.2.3 1 1.4 1 1.4l2.7 3.7c.1.2 3.4 4.4 3.8 4.8.9 1.1 1.8 2.2 2.7 3.2l.5.5c.1.1.1.4.1.8 0 1.3.1 2.6.1 3.9 0 .2.1.4.2.6.3.3.6.1.7-.2.1-.2 0-2.4 0-2.7-.3-.3-.5-1.3-.4-2.9zM12.2 46.9s-2.8-.8-4.8-2.7-2.6-2.7-2.8-3-1.8-3-2-3.6c-.2-.5-.2-.7.2-1 .4-.4 1-.5 1.3.1.1.2.4 1 .5 1.2s1 1.9 1.7 2.8 1.6 2.2 4.4 3.8c.6.3 1.2.6 1.9.9.3.1.6.2.8.4.1.2.1.6-.1.8-.2.4-.7.4-1.1.3zM7.1 30.7l.9 3.1c.3.7 1.1 2.3 1.9 3.3s2.4 2.6 3.4 3.2 2 1.1 3 1.5c1 .3 1.1.4 1.2.5.3.4.2 1.2-.4 1.3-.2 0-1.2 0-1.8-.3L12 41.7c-.5-.4-3.9-3.1-5.1-6S5.3 31 5.2 30.4s-.2-1.1 0-1.4c.3-.4.9-.8 1.3-.3.2.3.3.6.3.9.1 0 .2.8.3 1.1zm26.8-25s.2-.1.5-.1.8.3 1.4.7 1.9 1 3.6 2.9 2.9 3.9 3.4 5.8c.5 1.8.8 3.1.9 5.5 0 .5.1 1.6 0 1.7-.2.5-.5.7-1 .7-.6 0-.7-.5-.7-1l-.1-2.9c-.1-.6-.3-1.9-.7-2.9-.3-1-.7-2.3-1.7-3.6-.9-1.3-2.1-2.8-3.2-3.5l-2.4-1.5c-.6-.6-.7-1.2 0-1.8zm4.9-2.5s.3-.2.5-.1c.2 0 .7.3.9.4s2.1 1.3 3.6 3c1.5 1.6 3.5 5.1 3.7 7.4.1.4.2.9 0 1-.2.2-.4.4-.7.4-.2 0-.5 0-.7-.1-.1-.2-.4-1.1-.4-1.3s-.6-2-1.1-3.1C44 9.7 43.5 8.5 42 7.1s-2.2-1.9-2.8-2.2-1.1-.6-1.1-1c.1-.3.3-.6.7-.7z"/>
          </svg>
        `;
      ]]]

icon_home:
  state_display: Auto
  styles:
    card:
      - transition: all 0.3s ease-out
    custom_fields:
      icon:
        - width: 72%
        - margin-left: -1%
        - fill: >
            [[[ return variables.state_on ? '#c7983e' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                from,
                20%,
                40%,
                60%,
                80%,
                to {
                  animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
                }
                0% {
                  transform: scale(0.3);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.9);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                to {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 1s;
                transform-origin: center;
              }
            </style>
            <path class="${state}" d="M42.2 28.3c0-.8-.2-1-.2-1L26 12.1s-.5-.4-1-.4-1 .3-1 .3L8.2 27.1c-.4.5-.4.9-.4.9v18.3c0 1.1.9 2 1.9 2h8.2a1.47 1.47 0 0 0 1.5-1.5v-14a1.47 1.47 0 0 1 1.5-1.5h8.4a1.47 1.47 0 0 1 1.5 1.5v14a1.47 1.47 0 0 0 1.5 1.5h8.2c1.1 0 2-.9 2-1.9 0-.2-.3-18.1-.3-18.1zM7.3 25l-1.6 1.5s-.3.3-.5.3-.5 0-.8-.2c-.2-.2-2-2.8-2-2.8s-.1-.4-.1-.7c.1-.3.2-.7.3-.8.4-.1 21.5-20.1 21.5-20.1s.4-.3.9-.3c.4 0 .8.1.9.2s.5.4.5.4l8.9 8.5V6s.1-.4.2-.7c.1-.2.3-.3.4-.3s.3-.1.3-.1h3s.3.1.4.3a1.08 1.08 0 0 1 .3.7v9.8l7.2 6.9s.2.3.3.4c.1.2.1.7.1.7 0 .1-.1.4-.2.5s-1.6 2.5-1.6 2.5-.1.3-.3.3c-.2.1-.4.1-.7 0-.2-.1-.5-.4-.5-.4L26.4 9.4s-.3-.3-.5-.4-.4-.2-.8-.2-.5.1-.8.1c-.1.1-.4.3-.7.5C23.3 9.8 7.3 25 7.3 25z"/>
          </svg>
        `;
      ]]]

icon_multisensor:
  custom_fields:
    icon: >
      <svg viewBox="0 0 30 30">
        <path fill="var(--light-color)" d="M15 13V5A3 3 0 0 0 9 5V13A5 5 0 1 0 15 13M12 4A1 1 0 0 1 13 5V8H11V5A1 1 0 0 1 12 4Z"/>
      </svg>

icon_ceiling_square:
  styles:
    custom_fields:
      icon:
        - margin-top: -20%
  custom_fields:
    icon: >
      <svg viewBox="0 0 30 30">
        <path fill="var(--light-color)" d="M23.802,18.22975 L16.632,20.88375 C16.223,21.03675 15.778,21.03675 15.368,20.88375 L8.198,18.22975 C7.932,18.13075 7.935,17.72075 8.202,17.62675 L15.397,15.11075 C15.789,14.97175 16.211,14.97175 16.604,15.11075 L23.798,17.62675 C24.066,17.72075 24.069,18.13075 23.802,18.22975 M27.471,13.25875 L16.631,9.11775 C16.222,8.96075 15.779,8.96075 15.369,9.11775 L4.53,13.25875 C4.214,13.37875 4,13.73375 4,14.13475 L4,17.84775 C4,18.24975 4.214,18.60375 4.53,18.72375 L15.369,22.88275 C15.779,23.03975 16.222,23.03975 16.631,22.88275 L27.471,18.72375 C27.786,18.60375 28,18.24975 28,17.84775 L28,14.13475 C28,13.73375 27.786,13.37875 27.471,13.25875"/>
      </svg>

icon_ceiling-adore-alt-flush:
  styles:
    custom_fields:
      icon:
        - margin-top: -10%
  custom_fields:
    icon: >
      <svg viewBox="0 0 30 30">
        <path fill="var(--light-color)" d="M12.04,6.77c-5.74,0-10.38,1.85-10.38,4.12l-0.01,1.74c0,2.27,4.65,4.12,10.39,4.12 c5.74,0,10.39-1.84,10.39-4.12v-1.74C22.43,8.62,17.78,6.77,12.04,6.77z M12.04,15.81c-4.52,0-8.19-1.31-8.19-2.92 s3.67-2.92,8.19-2.92c4.52,0,8.19,1.31,8.19,2.92S16.56,15.81,12.04,15.81z"/>
      </svg>

icon_ceiling-round:
  styles:
    custom_fields:
      icon:
        - margin-top: -20%
  custom_fields:
    icon: >
      <svg viewBox="0 0 30 30">
        <path fill="var(--light-color)" d="M23.163,20.2435 C19.233,21.2515 12.778,21.2515 8.845,20.2435 C4.966,19.2495 5.085,17.6675 9.014,16.7085 C12.889,15.7635 19.1,15.7635 22.979,16.7085 C26.912,17.6675 27.038,19.2495 23.163,20.2435 M27.925,12.0015 C27.633,11.2515 26.44,10.5315 24.378,9.9615 C19.72,8.6795 12.265,8.6795 7.615,9.9615 C5.553,10.5315 4.367,11.2515 4.075,12.0015 C4.022,12.1285 4,12.2485 4,12.3765 L4,16.6265 C4,16.7535 4.022,19.8815 4.075,20.0015 C4.36,20.7215 5.463,21.4185 7.412,21.9805 C12.13,23.3395 19.878,23.3395 24.595,21.9805 C26.537,21.4185 27.64,20.7215 27.925,20.0015 C27.977,19.8815 28,19.7535 28,19.6265 L28,12.3765 C28,12.2485 27.977,12.1285 27.925,12.0015"/>
      </svg>

icon_pillar-impress:
  styles:
    custom_fields:
      icon:
        - margin-top: -5%
  custom_fields:
    icon: >
      <svg viewBox="0 0 30 30">
        <path fill="var(--light-color)" d="M15.36,9.85V2.18c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0-0.01,0-0.01c0-0.09-0.03-0.17-0.08-0.25c-0.01-0.02-0.02-0.03-0.03-0.05 c-0.06-0.07-0.12-0.12-0.21-0.16c0,0-0.01-0.01-0.01-0.01l-2.86-1c-0.11-0.04-0.22-0.04-0.33,0l-2.87,1c0,0-0.01,0.01-0.01,0.01 C8.87,1.74,8.8,1.8,8.75,1.87C8.73,1.88,8.73,1.9,8.71,1.92C8.67,1.99,8.64,2.07,8.63,2.16c0,0,0,0.01,0,0.01c0,0,0,0,0,0 c0,0,0,0,0,0v7.67c0,0,0,0,0,0c0,0,0,0,0,0l0.01,11.9c0,0.21,0.13,0.4,0.33,0.47l2.87,1.07c0.06,0.02,0.12,0.03,0.17,0.03 c0.06,0,0.12-0.01,0.18-0.03l2.86-1.07c0.2-0.07,0.32-0.26,0.32-0.47L15.36,9.85z M14.36,9.5l-1.61,0.6V3.5l1.61-0.6V9.5z M11.25,3.5v6.6L9.63,9.5V2.9L11.25,3.5z"/>
      </svg>

icon_sprinkler:
  styles:
    custom_fields:
      icon:
        - margin-top: -20%
  custom_fields:
    icon: >
      <svg viewBox="0 0 30 30">
        <path fill="var(--light-color)" d="M 11.762099,30.450461 C 11.130999,30.128475 10.75258,29.596437 10.699513,28.95652 L 10.672021,28.625004 H 16 21.327979 L 21.300487,28.95652 C 21.246786,29.604084 20.840682,30.166157 20.211154,30.464224 L 19.871583,30.625004 15.982666,30.622336 12.09375,30.619669 Z M 10.3125,27.562663 C 9.64397,27.48928 9.0181063,27.183762 8.440135,26.648662 7.7133581,25.975795 7.4168181,25.322884 7.3365156,24.218753 7.2147169,22.544068 8.3045844,21.015098 9.96875,20.526003 10.222958,20.451291 10.665862,20.404188 11.34375,20.379771 L 12.34375,20.343753 12.360754,19.171877 12.377758,18.000002 H 16 19.622242 L 19.639246,19.171877 19.65625,20.343753 20.6875,20.381863 C 21.577328,20.414746 21.785842,20.442765 22.207989,20.586179 22.840876,20.801186 23.255373,21.071285 23.714419,21.567816 24.381854,22.289753 24.738364,23.284879 24.670809,24.237391 24.634674,24.746898 24.464542,25.468174 24.343504,25.625003 24.303709,25.676566 24.196499,25.849607 24.105259,26.00954 23.864756,26.43111 23.237761,26.968855 22.642951,27.263697 22.226999,27.469879 22.031423,27.527522 21.611701,27.567636 20.972486,27.628728 10.873868,27.624283 10.3125,27.562663 Z M 10.346591,25.659094 10.5,25.505685 V 24.022497 C 10.5,22.585692 10.49575,22.534785 10.364106,22.394656 10.188382,22.207607 9.9709637,22.210857 9.7784094,22.403412 L 9.625,22.556821 V 24.031396 25.505972 L 9.7903763,25.659238 C 9.9996488,25.853184 10.15254,25.853145 10.346591,25.659094 Z M 12.317308,25.629811 12.5,25.447119 V 24.00197 22.556821 L 12.346591,22.403412 C 12.159829,22.21665 11.94463,22.207092 11.761785,22.377438 11.628294,22.501803 11.625,22.541581 11.625,24.029151 V 25.553431 L 11.789679,25.682967 C 12.009396,25.855796 12.100501,25.846618 12.317308,25.629811 Z M 14.272821,25.682967 14.4375,25.553431 V 24.04637 C 14.4375,22.585055 14.433375,22.534918 14.301606,22.394656 14.136396,22.218799 13.938451,22.20987 13.741299,22.369382 13.594821,22.487895 13.593613,22.499467 13.574903,23.964718 L 13.556057,25.440675 13.741971,25.626589 C 13.962042,25.846661 14.052504,25.856268 14.272821,25.682967 Z M 16.284091,25.659094 16.4375,25.505685 V 24.022497 C 16.4375,22.585692 16.43325,22.534785 16.301606,22.394656 16.131021,22.213077 15.894816,22.209597 15.707153,22.385897 15.563783,22.520587 15.5625,22.535028 15.5625,24.013882 V 25.505972 L 15.727876,25.659238 C 15.937149,25.853184 16.09004,25.853145 16.284091,25.659094 Z M 18.272828,25.633794 18.444042,25.455085 18.425146,23.983971 C 18.407887,22.64035 18.395932,22.501468 18.287188,22.38143 18.133674,22.211973 17.890292,22.213847 17.707153,22.385897 17.563738,22.520629 17.5625,22.534638 17.5625,24.022494 17.5625,25.477281 17.566658,25.527623 17.698394,25.66785 17.880025,25.861186 18.065507,25.85019 18.272828,25.633794 Z M 20.210321,25.682967 20.375,25.553431 V 24.029151 C 20.375,22.541581 20.371706,22.501803 20.238215,22.377438 20.054431,22.206217 19.839961,22.21686 19.650201,22.40662 L 19.493583,22.563238 19.512417,24.037136 19.53125,25.511034 19.70661,25.661769 C 19.920952,25.84601 19.998876,25.849289 20.210321,25.682967 Z M 22.209624,25.659238 22.375,25.505972 V 24.022641 C 22.375,22.585688 22.370751,22.534787 22.239106,22.394656 22.068521,22.213077 21.832316,22.209597 21.644653,22.385897 21.501161,22.520702 21.5,22.533954 21.5,24.037611 V 25.553431 L 21.664679,25.682967 C 21.879565,25.851996 22.007651,25.846419 22.209624,25.659238 Z M 3.5846907,26.435035 C 3.2492533,26.368646 2.7263182,26.104595 2.3903569,25.831965 2.0094514,25.522864 1.6809677,24.829471 1.6392543,24.246471 1.5988999,23.682465 1.7459217,23.122392 2.0631859,22.631523 2.3295138,22.219462 2.5475462,22.036872 3.1075927,21.756893 L 3.4964354,21.562503 H 5.2803674 7.0642994 L 6.8797012,21.92819 C 6.4866681,22.706784 6.4188606,23.012091 6.4195612,24.000003 6.420055,24.695881 6.445145,24.976922 6.5276456,25.210684 6.5867388,25.378121 6.6458194,25.570843 6.6589369,25.638954 6.6720537,25.707066 6.7682219,25.914177 6.8726431,26.099201 6.9770644,26.284226 7.0625,26.450098 7.0625,26.467806 7.0625,26.520717 3.8653913,26.490591 3.5846907,26.435035 Z M 24.9375,26.480183 C 24.9375,26.46369 25.021875,26.289797 25.125,26.093753 25.228125,25.897709 25.3125,25.702299 25.3125,25.659509 25.3125,25.616718 25.353387,25.499747 25.403361,25.399573 25.549869,25.105889 25.643846,24.328359 25.602736,23.750003 25.555256,23.08203 25.429711,22.593137 25.157356,22.015628 L 24.943661,21.562503 H 26.727912 28.512163 L 29.008049,21.820491 C 29.576769,22.116372 29.852804,22.403148 30.143378,23.000003 30.324712,23.372472 30.341266,23.458223 30.342454,24.031253 30.343691,24.627494 30.332977,24.678339 30.109643,25.136224 29.838284,25.692569 29.560924,25.951567 28.902703,26.26326 L 28.46875,26.468753 26.703125,26.489461 C 25.732031,26.50085 24.9375,26.496675 24.9375,26.480183 Z M 11.90625,16.490878 C 11.080274,15.419968 10.92091,15.070539 11.165661,14.867029 11.243016,14.802709 11.598704,14.773434 12.587536,14.750002 L 13.90625,14.718752 V 13.625002 12.531252 L 13.044485,12.500002 C 12.062891,12.464406 12.064956,12.465552 12.063457,11.955471 12.061274,11.212536 12.510921,10.531372 13.240838,10.171872 L 13.653248,9.9687512 15.97905,9.9502962 18.304852,9.9318412 18.688921,10.125719 C 19.204914,10.386191 19.580632,10.745417 19.751923,11.142061 19.906687,11.500435 19.982292,12.22461 19.880645,12.375002 19.831339,12.447952 19.626084,12.475685 18.955515,12.500002 L 18.09375,12.531252 V 13.625002 14.718752 L 19.412464,14.750002 C 20.401296,14.773434 20.756984,14.802709 20.834339,14.867029 21.079278,15.070695 20.917801,15.424524 20.09375,16.489805 L 19.65625,17.055377 16,17.056746 12.34375,17.058115 Z M 19.653409,9.4715918 C 19.488448,9.3066312 19.460104,9.1288299 19.566944,8.9291974 19.649849,8.774288 20.170844,8.4375011 20.327577,8.4375011 20.48151,8.4375011 20.75,8.7123861 20.75,8.8699855 20.75,9.1183061 20.183932,9.6250012 19.906513,9.6250012 19.851681,9.6250012 19.737784,9.5559668 19.653409,9.4715918 Z M 11.740011,9.3736374 C 11.409102,9.1988236 11.231727,8.9507424 11.276736,8.7256942 11.328252,8.4681161 11.424394,8.375001 11.638832,8.375001 12.250573,8.375001 12.727351,9.0226505 12.375,9.3750012 12.219761,9.5302399 12.035698,9.5298443 11.740011,9.3736374 Z M 17.930071,8.6245817 C 17.874423,8.5920667 17.795197,8.4841173 17.754016,8.3846948 17.689977,8.2300942 17.69893,8.1618229 17.815857,7.913071 17.965062,7.5956503 18.198974,7.3750009 18.386269,7.3750009 18.545401,7.3750009 18.8125,7.6489422 18.8125,7.8121497 18.8125,8.0052429 18.589578,8.4071292 18.399565,8.5565929 18.219455,8.698268 18.088611,8.7172155 17.930071,8.6245817 Z M 13.607091,8.4993292 C 13.424519,8.3557179 13.229029,7.8974685 13.260219,7.6862253 13.290717,7.4796753 13.575592,7.286549 13.775691,7.3367709 13.972125,7.3860728 14.241598,7.7747978 14.29119,8.0803985 14.321034,8.2643035 14.299215,8.3314679 14.166524,8.4641592 13.973011,8.6576723 13.820575,8.6672555 13.607091,8.4993292 Z M 21.3125,8.3941273 C 21.160601,8.3398398 21.0625,8.1766985 21.0625,7.9783779 21.0625,7.6641353 21.812951,7.0608653 22.200635,7.0634578 22.393701,7.064749 22.480492,7.1280553 22.553899,7.3211297 22.661958,7.605346 22.478804,7.8583541 21.878389,8.2542754 21.605241,8.4343929 21.498782,8.4607029 21.3125,8.3941273 Z M 10.090361,8.1186885 C 9.92035,8.012091 9.7039062,7.8521416 9.609375,7.7632447 9.2838856,7.4571559 9.4324331,6.9375009 9.8454206,6.9375009 9.9986888,6.9375009 10.446964,7.2129678 10.734375,7.4837672 10.988334,7.7230478 11.018048,8.0614948 10.798593,8.2152073 10.595456,8.3574898 10.436724,8.3358579 10.090361,8.1186885 Z M 15.755023,8.203126 C 15.522028,8.0126991 15.503608,7.3178215 15.725669,7.0957603 15.850189,6.9712402 16.213765,6.9726946 16.339286,7.0982153 16.410807,7.1697371 16.4375,7.3216484 16.4375,7.657171 16.4375,8.0624379 16.420775,8.1296279 16.298593,8.2152073 16.116438,8.3427935 15.920586,8.3384404 15.755023,8.203126 Z M 18.715909,6.9715915 C 18.521129,6.7768115 18.52293,6.637514 18.725466,6.232298 19.049832,5.5833383 19.356759,5.4135774 19.659091,5.7159098 19.856667,5.9134857 19.852422,5.9981829 19.621754,6.4610196 19.299906,7.1068065 19.012895,7.2685778 18.715909,6.9715915 Z M 12.795791,6.9943884 C 12.653166,6.9113484 12.25,6.1120121 12.25,5.9122753 12.25,5.6082746 12.635666,5.4107098 12.896053,5.581322 13.050587,5.6825767 13.5,6.4797477 13.5,6.6526065 13.5,6.8046177 13.215066,7.0627909 13.049716,7.0606003 12.970809,7.0595553 12.856544,7.0297596 12.795791,6.9943884 Z M 23.035714,6.9017865 C 22.911384,6.7774558 22.90895,6.4435752 23.031103,6.269177 23.170243,6.0705263 23.866891,5.6250007 24.038372,5.6250007 24.37599,5.6250007 24.550412,6.0609825 24.33553,6.3677702 24.18458,6.5832814 23.506831,7.0000009 23.307274,7.0000009 23.211934,7.0000009 23.089732,6.9558046 23.035714,6.9017865 Z M 8.375,6.8160477 C 8.2546875,6.7522865 8.0226563,6.5823896 7.859375,6.4384983 7.616565,6.2245221 7.5625,6.1388204 7.5625,5.9679034 7.5625,5.7333637 7.6828012,5.581748 7.9151762,5.5234256 8.036325,5.4930192 8.1669781,5.5493234 8.4943875,5.7730323 9.0593069,6.1590245 9.2182119,6.5317889 8.9375,6.8125009 8.7843388,6.9656621 8.6588069,6.966454 8.375,6.8160477 Z M 15.742041,5.7561232 C 15.614117,5.652537 15.592262,5.5718269 15.572138,5.128673 15.544194,4.5133431 15.599847,4.0965817 15.726932,3.9694972 15.850391,3.8460385 16.214319,3.8482479 16.339286,3.9732148 16.418035,4.0519641 16.4375,4.2253793 16.4375,4.8482149 16.4375,5.5416674 16.42409,5.6384106 16.3125,5.7500007 16.155133,5.9073674 15.931779,5.9097646 15.742041,5.7561232 Z M 24.903409,5.4715916 C 24.725614,5.293796 24.713938,5.1885288 24.844098,4.9368275 24.968921,4.6954466 25.452148,4.4119396 25.652879,4.4623197 26.189454,4.5969915 26.080671,5.2307906 25.473662,5.50648 25.140823,5.657648 25.086119,5.6543011 24.903409,5.4715916 Z M 6.3647625,5.2940991 C 6.0306654,5.0392748 5.9352476,4.8088379 6.0665351,4.573871 6.2415477,4.2606487 6.7167031,4.3344584 7.0627875,4.728627 7.2836181,4.9801394 7.2961513,5.1119716 7.1204637,5.335322 6.9413219,5.5630643 6.7001512,5.5499087 6.3647625,5.2940991 Z M 19.715909,5.1590916 C 19.511123,4.9543053 19.521156,4.8485185 19.796875,4.3054155 20.066024,3.7752535 20.256396,3.6518594 20.551129,3.8165277 20.790702,3.9503776 20.805681,4.2692756 20.592184,4.690592 20.281608,5.303483 20.007078,5.4502604 19.715909,5.1590916 Z M 11.800509,5.128984 C 11.616315,4.9840962 11.25,4.3187206 11.25,4.129036 11.25,3.9622157 11.515193,3.6875005 11.676231,3.6875005 11.878681,3.6875005 12.091091,3.9087222 12.299966,4.3371126 12.54032,4.830065 12.544531,4.8986516 12.346591,5.0965916 12.161716,5.281467 12.006096,5.290698 11.800509,5.128984 Z M 20.715909,3.3465914 C 20.529592,3.1602746 20.521575,2.9502406 20.688304,2.6234245 20.906692,2.1953486 21.2585,2.0799289 21.526879,2.3483084 21.666497,2.4879258 21.648648,2.7074888 21.468834,3.062334 21.235232,3.5233266 20.986536,3.6172184 20.715909,3.3465914 Z M 10.82557,3.3396203 C 10.641556,3.2107317 10.4375,2.8034142 10.4375,2.5649902 10.4375,2.3653941 10.623089,2.1250003 10.777181,2.1250003 10.997362,2.1250003 11.172711,2.2593286 11.330164,2.5486209 11.539942,2.9340525 11.543365,3.0873172 11.346591,3.2840913 11.16902,3.4616624 11.022156,3.4773147 10.82557,3.3396203 Z M 15.827216,2.6865623 C 15.453885,2.5330283 15.486684,1.5294968 15.868999,1.4081547 16.043776,1.3526827 16.306274,1.4340856 16.376649,1.5655806 16.46433,1.729415 16.451917,2.4572357 16.359375,2.5783839 16.258931,2.7098778 16.007963,2.760895 15.827216,2.6865623 Z"/>
      </svg>

icon_nuki:
  styles:
    custom_fields:
      icon:
        - margin-top: -10%
  custom_fields:
    icon: >
      <svg viewBox="0 0 30 30">
        <path fill="var(--light-color)" d="m 16.244893,8.251 a 4.592,4.592 0 0 1 -5.757,3.126 4.66,4.66 0 0 1 -3.021,-3.008 2.263,2.263 0 0 0 -0.787,1.685 v 11.067 a 0.924,0.924 0 0 0 0.914,0.934 h 8.672 a 0.924,0.924 0 0 0 0.914,-0.934 V 10.054 a 2.265,2.265 0 0 0 -0.935,-1.803 z m -8.649,-0.173 a 4.415,4.415 0 0 0 5.517,3.037 4.483,4.483 0 0 0 3,-3.134 V 7.8 a 4.732,4.732 0 0 0 0.126,-1.073 4.432,4.432 0 1 0 -8.848,-0.5 c -0.008,0.145 -0.009,0.291 0,0.436 a 4.513,4.513 0 0 0 0.157,1.2 1.056,1.056 0 0 0 0.048,0.215 z m 4.21,-4.357 v 0 a 2.962,2.962 0 0 1 2.93,2.94 2.735,2.735 0 0 1 -0.1,0.784 1.149,1.149 0 0 1 -0.053,0.182 2.9,2.9 0 0 1 -3.7,1.877 2.949,2.949 0 0 1 -1.838,-1.877 1.382,1.382 0 0 0 0,-0.182 3.12,3.12 0 0 1 -0.147,-0.784 2.951,2.951 0 0 1 2.908,-2.94 z m -2.322,3.968 a 2.512,2.512 0 0 0 3.285,1.45 2.561,2.561 0 0 0 1.419,-1.45 l 0.062,-0.182 a 2.724,2.724 0 0 0 0.116,-0.827 2.536,2.536 0 1 0 -5.071,0 2.4,2.4 0 0 0 0.125,0.784 0.632,0.632 0 0 0 0.064,0.225 z"/>
      </svg>
